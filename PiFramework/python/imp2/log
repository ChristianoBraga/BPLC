Blk(DSeq(Bind(Id(x), Ref(Num(2))), Bind(Id(y), Ref(Num(2)))), Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))))
State #0 of the π automaton:
locs : []
env : {}
sto : {}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))))]
cnt : ['#BLKDEC', DSeq(Bind(Id(x), Ref(Num(2))), Bind(Id(y), Ref(Num(2))))]

State #1 of the π automaton:
locs : []
env : {}
sto : {}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))))]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2))), Bind(Id(x), Ref(Num(2)))]

State #2 of the π automaton:
locs : []
env : {}
sto : {}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Id(x)]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2))), '#BIND', Ref(Num(2))]

State #3 of the π automaton:
locs : []
env : {}
sto : {}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Id(x)]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2))), '#BIND', '#REF', Num(2)]

State #4 of the π automaton:
locs : []
env : {}
sto : {}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Id(x), 2]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2))), '#BIND', '#REF']

State #5 of the π automaton:
locs : [0]
env : {}
sto : {0: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Id(x), 0]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2))), '#BIND']

State #6 of the π automaton:
locs : [0]
env : {}
sto : {0: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}]
cnt : ['#BLKDEC', '#DSEQ', Bind(Id(y), Ref(Num(2)))]

State #7 of the π automaton:
locs : [0]
env : {}
sto : {0: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}, Id(y)]
cnt : ['#BLKDEC', '#DSEQ', '#BIND', Ref(Num(2))]

State #8 of the π automaton:
locs : [0]
env : {}
sto : {0: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}, Id(y)]
cnt : ['#BLKDEC', '#DSEQ', '#BIND', '#REF', Num(2)]

State #9 of the π automaton:
locs : [0]
env : {}
sto : {0: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}, Id(y), 2]
cnt : ['#BLKDEC', '#DSEQ', '#BIND', '#REF']

State #10 of the π automaton:
locs : [0, 1]
env : {}
sto : {0: 2, 1: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}, Id(y), 1]
cnt : ['#BLKDEC', '#DSEQ', '#BIND']

State #11 of the π automaton:
locs : [0, 1]
env : {}
sto : {0: 2, 1: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0}, {'y': 1}]
cnt : ['#BLKDEC', '#DSEQ']

State #12 of the π automaton:
locs : [0, 1]
env : {}
sto : {0: 2, 1: 2}
val : [[], Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), {'x': 0, 'y': 1}]
cnt : ['#BLKDEC']

State #13 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))))]

State #14 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', Gt(Id(x), Num(0))]

State #15 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x), Num(0)]

State #16 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x)]

State #17 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0, 2]
cnt : ['#BLKCMD', '#LOOP', '#GT']

State #18 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), True]
cnt : ['#BLKCMD', '#LOOP']

State #19 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]

State #20 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))]

State #21 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), Assign(Id(y), Mul(Id(y), Id(x)))]

State #22 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', Mul(Id(y), Id(x))]

State #23 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL', Id(y), Id(x)]

State #24 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 2]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL', Id(y)]

State #25 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 2, 2]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL']

State #26 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 2}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 4]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN']

State #27 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1)))]

State #28 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', Sub(Id(x), Num(1))]

State #29 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB', Id(x), Num(1)]

State #30 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 1]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB', Id(x)]

State #31 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 1, 2]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB']

State #32 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 2, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 1]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN']

State #33 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD']

State #34 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))))]

State #35 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', Gt(Id(x), Num(0))]

State #36 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x), Num(0)]

State #37 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x)]

State #38 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0, 1]
cnt : ['#BLKCMD', '#LOOP', '#GT']

State #39 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), True]
cnt : ['#BLKCMD', '#LOOP']

State #40 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]

State #41 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))]

State #42 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), Assign(Id(y), Mul(Id(y), Id(x)))]

State #43 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', Mul(Id(y), Id(x))]

State #44 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL', Id(y), Id(x)]

State #45 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 1]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL', Id(y)]

State #46 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 1, 4]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN', '#MUL']

State #47 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'y', 4]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1))), '#ASSIGN']

State #48 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', Assign(Id(x), Sub(Id(x), Num(1)))]

State #49 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', Sub(Id(x), Num(1))]

State #50 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x']
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB', Id(x), Num(1)]

State #51 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 1]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB', Id(x)]

State #52 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 1, 1]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN', '#SUB']

State #53 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 1, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}, 'x', 0]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD', '#ASSIGN']

State #54 of the π automaton:
locs : []
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, [0, 1], {'x': 0, 'y': 1}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), '#BLKCMD']

State #55 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}]
cnt : ['#BLKCMD', Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))))]

State #56 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', Gt(Id(x), Num(0))]

State #57 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x), Num(0)]

State #58 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0]
cnt : ['#BLKCMD', '#LOOP', '#GT', Id(x)]

State #59 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), 0, 0]
cnt : ['#BLKCMD', '#LOOP', '#GT']

State #60 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}, Loop(Gt(Id(x), Num(0)), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1)))))), Blk(CSeq(Assign(Id(y), Mul(Id(y), Id(x))), Assign(Id(x), Sub(Id(x), Num(1))))), False]
cnt : ['#BLKCMD', '#LOOP']

State #61 of the π automaton:
locs : [0, 1]
env : {'x': 0, 'y': 1}
sto : {0: 0, 1: 4}
val : [[], {}]
cnt : ['#BLKCMD']

State #62 of the π automaton:
locs : []
env : {}
sto : {}
val : []
cnt : []

