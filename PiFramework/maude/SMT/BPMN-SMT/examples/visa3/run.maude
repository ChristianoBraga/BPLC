---- Symbolic Formal Modelling and Analysis of BPMN using Maude+CVC4
---- authors: Francisco Duran, Gwen Salaun, Camilo Rocha
---- file: verif.maude
----
---- This file contains operations for the automated symbolic analysis
---- of BPMN processes

load ../../verif.maude
load visa.maude

red in STRING : "visa.maude" .

mod RUN is
  pr VERIF .
  pr BPMN-EX .

  var  Atts      : AttributeSet .
  var  B         : Boolean .
  var  C         : Cid .
  vars Cnf St    : Configuration .
  var  VI        : Map{SymbVar,Nat} .
  var  O PId SId : Oid .
  var  Tks       : Set{Message} .
  var  Id        : Id .
  var  NId       : NId .
  var  FId1 FId2 : FId .
  var  Str       : String .
  var  T         : Time .
  var  Nodes     : Set{Node} .

  op get-constr : Configuration -> Boolean .
  op get-varidx : Configuration -> Map{SymbVar,Nat} .
  op get-tokens : Configuration -> Set{Message} .
  eq get-constr( < O : C | Atts, constr : B > Cnf)
   = B .
  eq get-varidx( < O : C | Atts, varidx : VI > Cnf)
   = VI .
  eq get-tokens( < O : C | Atts, tokens : Tks > Cnf)
   = Tks .

  op token-at : Id Configuration -> Bool .
  eq token-at(Id, < O : Simulation | tokens : (token(Id, 0) Tks), Atts > Cnf)
    = true .
  eq token-at(Id, Cnf) = false [owise] .

  op token-at : String Configuration -> Bool .
  eq token-at(Str, < SId : Simulation | tokens : (token(NId, 0) Tks), Atts >
                   < PId : Process | nodes : (task(NId, Str, FId1, FId2, T), Nodes), Atts >)
    = true .
  eq token-at(Str, Cnf) = false [owise] .

  vars OK        : Boolean .
  vars TRY FSIZE : Integer .
  vars QUAL      : Real .


  pr META-LEVEL .
  pr INTEGER .
  pr CONVERSION .
  op gen-intvar : String -> Integer .
  op error-int : -> [Integer] .
  var S : String .

  eq gen-intvar(S)
   = downTerm(qid(S + ":Integer"), error-int) .
endm

----eof

rew [10] initSystem(v(OK:Boolean) v(TRY:Integer) v(FSIZE:Integer) v(QUAL:Real)) .
---(
rewrite [10] in RUN : initSystem(v(OK) v(TRY) v(FSIZE) v(QUAL)) .
rewrites: 137 in 2ms cpu (3ms real) (47569 rewrites/second)
result Configuration:
  < p : Process | nodes : ..., flows : ... >
  < s : Simulation |
    tokens : token(t4, 0),
    gtime : 0,
    constr : (TRY#1:Integer === (0).Integer and
              TRY#1:Integer < (3).Integer and
              FSIZE#1:Integer >= (2).Integer),
    varidx : (v(OK) |-> 0, v(TRY) |-> 1, v(FSIZE) |-> 1, v(QUAL) |-> 0) >
---)

---- first example in the paper ... note the hack in the condition of the search command
search initSystem(v(OK) v(TRY) v(FSIZE) v(QUAL))
       =>! St
       such that check-sat(get-constr(St) and process-expression(get-varidx(St), gen-intvar("TRY") === 3)) .
---(
Solution 1 (state 146)
states: 158  rewrites: 2042 in 62ms cpu (64ms real) (32520 rewrites/second)
St --> < p : Process | nodes : ..., flows : ... >
       < s : Simulation |
         tokens : empty,
         gtime : 0,
         constr : (TRY#1:Integer === (0).Integer and
                   TRY#1:Integer < (3).Integer and
                   FSIZE#1:Integer >= (2).Integer and
                   TRY#2:Integer === TRY#1:Integer + (1).Integer and
                   TRY#2:Integer < (3).Integer and
                   FSIZE#2:Integer >= (2).Integer and
                   TRY#3:Integer === TRY#2:Integer + (1).Integer and
                   TRY#3:Integer < (3).Integer and
                   FSIZE#3:Integer >= (2).Integer and
                   TRY#4:Integer === TRY#3:Integer + (1).Integer and
                   TRY#4:Integer >= (3).Integer),
         varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL) |-> 0) >

Solution 2 (state 185)
states: 198  rewrites: 2525 in 90ms cpu (92ms real) (27766 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer >= (2).Integer and TRY#2:Integer === TRY#1:Integer + (1).Integer and TRY#2:Integer < (
    3).Integer and FSIZE#2:Integer >= (2).Integer and TRY#3:Integer === TRY#2:Integer + (1).Integer and TRY#3:Integer < (
    3).Integer and FSIZE#3:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#4:Integer === TRY#3:Integer + (1).Integer
    and TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL) |-> 1) >

Solution 3 (state 188)
states: 200  rewrites: 2553 in 92ms cpu (94ms real) (27696 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer >= (2).Integer and TRY#2:Integer === TRY#1:Integer + (1).Integer and TRY#2:Integer < (
    3).Integer and FSIZE#2:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#3:Integer === TRY#2:Integer + (1).Integer
    and TRY#3:Integer < (3).Integer and FSIZE#3:Integer >= (2).Integer and TRY#4:Integer === TRY#3:Integer + (1).Integer and
    TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL) |-> 1) >

Solution 4 (state 192)
states: 203  rewrites: 2608 in 94ms cpu (96ms real) (27463 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#2:Integer === TRY#1:Integer + (1).Integer
    and TRY#2:Integer < (3).Integer and FSIZE#2:Integer >= (2).Integer and TRY#3:Integer === TRY#2:Integer + (1).Integer and
    TRY#3:Integer < (3).Integer and FSIZE#3:Integer >= (2).Integer and TRY#4:Integer === TRY#3:Integer + (1).Integer and
    TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL) |-> 1) >

Solution 5 (state 225)
states: 237  rewrites: 3018 in 110ms cpu (113ms real) (27240 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer >= (2).Integer and TRY#2:Integer === TRY#1:Integer + (1).Integer and TRY#2:Integer < (
    3).Integer and FSIZE#2:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#3:Integer === TRY#2:Integer + (1).Integer
    and TRY#3:Integer < (3).Integer and FSIZE#3:Integer < (2).Integer and QUAL#2:Real < (9/10).Real and TRY#4:Integer ===
    TRY#3:Integer + (1).Integer and TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL)
    |-> 2) >

Solution 6 (state 228)
states: 239  rewrites: 3046 in 112ms cpu (114ms real) (27074 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#2:Integer === TRY#1:Integer + (1).Integer
    and TRY#2:Integer < (3).Integer and FSIZE#2:Integer >= (2).Integer and TRY#3:Integer === TRY#2:Integer + (1).Integer and
    TRY#3:Integer < (3).Integer and FSIZE#3:Integer < (2).Integer and QUAL#2:Real < (9/10).Real and TRY#4:Integer ===
    TRY#3:Integer + (1).Integer and TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL)
    |-> 2) >

Solution 7 (state 231)
states: 241  rewrites: 3074 in 114ms cpu (116ms real) (26918 rewrites/second)
St --> < p : Process | nodes : (start(initial, sf1), end(final1, sf25), end(final2, sf24), end(final3, sf14), merge(m1,
    exclusive, (sf2, sf8, sf12), sf3), merge(m2, parallel, (sf21, sf22), sf23), split(s1, exclusive, sf5, (sf6,FSIZE >= (
    2).Integer) (sf7,FSIZE < (2).Integer)), split(s2, exclusive, sf9, (sf10,QUAL < (9/10).Real) (sf11,QUAL >= (9/10).Real)),
    split(s3, exclusive, sf15, (sf17,OK === (false).Boolean) (sf16,OK === (true).Boolean)), split(s5, exclusive, sf3, (sf13,TRY <
    (3).Integer) (sf14,TRY >= (3).Integer)), split(s4, parallel, sf18, (sf19, sf20)), task(t1, "Apply online", sf1, sf2, 0, TRY
    := (0).Integer), task(t2, "Upload scanned passport", sf13, sf4, 0, nil), task(t3, "Check filesize", sf4, sf5, 0, lookup(
    FSIZE)), task(t4, "Alert size error", sf6, sf8, 0, TRY := TRY + (1).Integer), task(t5, "Check quality", sf7, sf9, 0, lookup(
    QUAL)), task(t6, "Evaluate application", sf11, sf15, 0, lookup(OK)), task(t7, "Alert quality error", sf10, sf12, 0, TRY :=
    TRY + (1).Integer), task(t8, "Notify accept", sf16, sf18, 0, nil), task(t9, "Pay for fees", sf19, sf21, 0, nil), task(t10,
    "Deliver visa", sf23, sf24, 0, nil), task(t11, "Notify reject", sf17, sf25, 0, nil), task(t12, "Prepare visa", sf20, sf22, 0,
    nil)),flows : (flow(sf1, 0), flow(sf2, 0), flow(sf3, 0), flow(sf4, 0), flow(sf5, 0), flow(sf6, 0), flow(sf7, 0), flow(sf8,
    0), flow(sf9, 0), flow(sf10, 0), flow(sf11, 0), flow(sf12, 0), flow(sf13, 0), flow(sf14, 0), flow(sf15, 0), flow(sf16, 0),
    flow(sf17, 0), flow(sf18, 0), flow(sf19, 0), flow(sf20, 0), flow(sf21, 0), flow(sf22, 0), flow(sf23, 0), flow(sf24, 0), flow(
    sf25, 0)) > < s : Simulation | tokens : empty,gtime : 0,constr : (TRY#1:Integer === (0).Integer and TRY#1:Integer < (
    3).Integer and FSIZE#1:Integer < (2).Integer and QUAL#1:Real < (9/10).Real and TRY#2:Integer === TRY#1:Integer + (1).Integer
    and TRY#2:Integer < (3).Integer and FSIZE#2:Integer < (2).Integer and QUAL#2:Real < (9/10).Real and TRY#3:Integer ===
    TRY#2:Integer + (1).Integer and TRY#3:Integer < (3).Integer and FSIZE#3:Integer >= (2).Integer and TRY#4:Integer ===
    TRY#3:Integer + (1).Integer and TRY#4:Integer >= (3).Integer),varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL)
    |-> 2) >

Solution 8 (state 259)
states: 267  rewrites: 3457 in 134ms cpu (136ms real) (25739 rewrites/second)
St --> < p : Process | nodes : ..., flows : ... >
       < s : Simulation |
         tokens : empty,
         gtime : 0,
         constr : (TRY#1:Integer === (0).Integer and
                   TRY#1:Integer < (3).Integer and
                   FSIZE#1:Integer < (2).Integer and
                   QUAL#1:Real < (9/10).Real and
                   TRY#2:Integer === TRY#1:Integer + (1).Integer and
                   TRY#2:Integer < (3).Integer and
                   FSIZE#2:Integer < (2).Integer and
                   QUAL#2:Real < (9/10).Real and
                   TRY#3:Integer === TRY#2:Integer + (1).Integer and
                   TRY#3:Integer < (3).Integer and
                   FSIZE#3:Integer < (2).Integer and
                   QUAL#3:Real < (9/10).Real and
                   TRY#4:Integer === TRY#3:Integer + (1).Integer and
                   TRY#4:Integer >= (3).Integer),
         varidx : (v(OK) |-> 0, v(TRY) |-> 4, v(FSIZE) |-> 3, v(QUAL) |-> 3) >

---)


---- second example in the paper
search [1,500] initSystem(v(OK) v(TRY) v(FSIZE) v(QUAL)) =>! St such that get-tokens(St) =/= empty .
---(
No solution.
states: 293  rewrites: 3333 in 123ms cpu (126ms real) (26882 rewrites/second)
---)

---- task(t8, "Pay for fees", sf17, sf18, 0),
search [1,500] initSystem(v(OK) v(TRY) v(FSIZE) v(QUAL))
       =>! St
       such that token-at("Pay for fees", St)
             and check-sat(get-constr(St) and process-expression(get-varidx(St), gen-intvar("FSIZE") > 2)) .
---(
No solution.
states: 293  rewrites: 3530 in 133ms cpu (135ms real) (26518 rewrites/second)
)

search [1,500] initSystem(v(OK) v(TRY) v(FSIZE) v(QUAL))
       =>! St
       such that token-at(t8, St)
             and check-sat(get-constr(St) and process-expression(get-varidx(St), gen-intvar("FSIZE") > 2)) .
---(
No solution.
states: 293  rewrites: 3490 in 132ms cpu (134ms real) (26390 rewrites/second)
---)
