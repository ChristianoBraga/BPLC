load smt

mod EUCLID is protecting INTEGER .
    sort State .
    op gcd : Integer Integer -> State .
    op return : Integer -> State .
    vars I J K X Y Z : Integer .
    crl gcd(X, Y) => gcd(X - Y, Y) if X > Y = true .
    crl gcd(X, Y) => gcd(X, Y - X) if X < Y = true .
    crl gcd(X, Y) => return(X) if X = Y .
endm

smt-search [1] gcd(X, Y) =>* return(Z) such that Z = 3 /\ X + Y = 27 .